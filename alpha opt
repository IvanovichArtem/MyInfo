Option Explicit

' Main procedure: input data, convert to numbers, calibrate, and save α with limits considered
Sub AlphaCalibration_Main()
    Dim nMatrices As Long
    Dim i As Long, j As Long, k As Long
    Dim rng As Range, rngMain As Range, rngOut As Range
    Dim tmpArr As Variant, mainArrRaw As Variant
    Dim mainD() As Double
    Dim matrices3D() As Double
    Dim alphaArr() As Double
    Dim r_s_valid As Double, lambda_reg As Double
    Dim delta As Double
    Dim lb As Double, ub As Double
    Dim lbInput As String, ubInput As String
    Dim nRows As Long, nCols As Long
    Dim s As String
    
    ' 1) Input the number of "valid" matrices
    nMatrices = Application.InputBox( _
        prompt:="Enter the number of valid matrices:", _
        Title:="Calibration α", Type:=1)
    If nMatrices < 1 Then Exit Sub
    
    ' 2) Select the range of the main matrix and convert to numbers
    Set rngMain = Application.InputBox( _
        prompt:="Select the range for the main_matrix:", _
        Title:="Calibration α", Type:=8)
    If rngMain Is Nothing Then Exit Sub
    rngMain.NumberFormat = "General": rngMain.Value = rngMain.Value
    mainArrRaw = rngMain.Value2
    
    nRows = UBound(mainArrRaw, 1)
    nCols = UBound(mainArrRaw, 2)
    ReDim mainD(1 To nRows, 1 To nCols)
    
    For i = 1 To nRows
        For j = 1 To nCols
            s = CStr(mainArrRaw(i, j))
            s = Replace(s, ",", ".")
            If IsNumeric(s) Then
                mainD(i, j) = CDbl(s)
            Else
                mainD(i, j) = Val(s)
            End If
        Next j
    Next i
    
    ' 3) Prepare a 3D array for the "valid" matrices
    ReDim matrices3D(1 To nMatrices, 1 To nRows, 1 To nCols)
    
    ' 4) Read each "valid" matrix and convert to numbers
    For k = 1 To nMatrices
        Set rng = Application.InputBox( _
            prompt:="Select the range for valid matrix #" & k & ":", _
            Title:="Calibration α", Type:=8)
        If rng Is Nothing Then Exit Sub
        
        rng.NumberFormat = "General": rng.Value = rng.Value
        tmpArr = rng.Value2
        
        If UBound(tmpArr, 1) <> nRows Or UBound(tmpArr, 2) <> nCols Then
            MsgBox "The size of valid matrix #" & k & " does not match the main_matrix!", _
                   vbCritical, "Error"
            Exit Sub
        End If
        
        For i = 1 To nRows
            For j = 1 To nCols
                s = CStr(tmpArr(i, j))
                s = Replace(s, ",", ".")
                If IsNumeric(s) Then
                    matrices3D(k, i, j) = CDbl(s)
                Else
                    matrices3D(k, i, j) = Val(s)
                End If
            Next j
        Next i
    Next k
    
    ' 5) Input r_s_valid and the regularization parameter
    r_s_valid = Application.InputBox( _
        prompt:="Enter the value for r_s_valid:", _
        Title:="Calibration α", Type:=1)
    delta = r_s_valid - 1
    lambda_reg = 0.01
    
    ' 6) Input α limits as strings, then convert
    lbInput = InputBox("Enter the lower limit for α (default -0.2):", "Calibration α", "-0.2")
    s = Val(Replace(CStr(lbInput), ",", "."))
    If IsNumeric(s) Then
        lb = CDbl(s)
    Else
        MsgBox "Invalid lower limit!", vbCritical, "Error"
        Exit Sub
    End If
    
    ubInput = InputBox("Enter the upper limit for α (default 0.2):", "Calibration α", "0.2")
    s = Val(Replace(CStr(ubInput), ",", "."))
    If IsNumeric(s) Then
        ub = CDbl(s)
    Else
        MsgBox "Invalid upper limit!", vbCritical, "Error"
        Exit Sub
    End If
    
    ' 7) Select a location to output α
    Set rngOut = Application.InputBox( _
        prompt:="Select the top-left corner for saving α (size " & nRows & "×" & nCols & "):", _
        Title:="Calibration α", Type:=8)
    If rngOut Is Nothing Then Exit Sub
    If rngOut.Rows.Count < nRows Or rngOut.Columns.Count < nCols Then
        MsgBox "The selected range is too small!", vbCritical, "Error"
        Exit Sub
    End If
    
    ' 8) Calculate α considering the limits
    ReDim alphaArr(1 To nRows, 1 To nCols)
    Dim S_err As Double, S_denom As Double
    S_denom = (delta ^ 2) * nMatrices + lambda_reg
    
    For i = 1 To nRows
        For j = 1 To nCols
            S_err = 0#
            For k = 1 To nMatrices
                S_err = S_err + (matrices3D(k, i, j) - mainD(i, j))
            Next k
            alphaArr(i, j) = (delta * S_err) / S_denom
            ' Apply limits
            If alphaArr(i, j) < lb Then alphaArr(i, j) = lb
            If alphaArr(i, j) > ub Then alphaArr(i, j) = ub
        Next j
    Next i
    
    ' 9) Write α to the sheet
    rngOut.Resize(nRows, nCols).Value = alphaArr
    MsgBox "Calibration completed — α matrix saved.", vbInformation, "Done"
End Sub
