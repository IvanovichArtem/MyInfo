def simulate_total_loss(portfolio_df, migration_matrix, default_label='D'):
    """
    Симулирует кредитные переходы для каждого кредита по времени и возвращает общий агрегированный loss.
    :param portfolio_df: DataFrame с колонками ['id', 'dt', 'bucket_NPL', 'Задолженность']
    :param migration_matrix: DataFrame с миграционной матрицей (строки - текущие рейтинги, столбцы - будущие)
    :param default_label: Метка дефолта, например, 'D'
    :return: Общий агрегированный loss по всему портфелю
    """
    portfolio_df = portfolio_df.sort_values(by=['id', 'dt'])
    total_loss = 0
    
    for credit_id, credit_data in portfolio_df.groupby('id'):
        current_state = credit_data.iloc[0]['bucket_NPL']
        for idx, row in credit_data.iterrows():
            if current_state not in migration_matrix.index:
                new_state = current_state
            else:
                probs = migration_matrix.loc[current_state].values
                new_state = np.random.choice(migration_matrix.columns, p=probs)
            if new_state == default_label:
                total_loss += row['Задолженность']
            current_state = new_state
            
    return total_loss
